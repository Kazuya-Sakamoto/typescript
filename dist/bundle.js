(()=>{"use strict";class e{constructor(){}get totalScore(){return n.getInstance().activeElementsScore.reduce(((e,t)=>e+t),0)}render(){document.querySelector(".score__number").textContent=String(this.totalScore)}static getInstance(){return e.instance||(e.instance=new e),e.instance}}class t{constructor(e){this.element=e,e.addEventListener("click",this.clickEventHandler.bind(this))}clickEventHandler(){console.log("--------Click を検知しました (1) --------"),this.element.classList.toggle("food--active"),e.getInstance().render()}}class n{constructor(){this.elements=document.querySelectorAll(".food"),this._activeElements=[],this._activeElementsScore=[],this.elements.forEach((e=>{new t(e)}))}get activeElements(){return console.log("--------3--------"),this._activeElements=[],this.elements.forEach((e=>{e.classList.contains("food--active")&&this._activeElements.push(e)})),this._activeElements}get activeElementsScore(){return console.log("--------2--------"),this._activeElementsScore=[],this.activeElements.forEach((e=>{const t=e.querySelector(".food__score");t&&this._activeElementsScore.push(Number(t.textContent))})),this._activeElementsScore}static getInstance(){return n.instance||(n.instance=new n,console.log("--------0--------")),console.log("--------0--------"),n.instance}}console.log("foodsですよ 1回しか呼ばれません"),console.log("Hello"),n.getInstance()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90eXBlc2NyaXB0YXBwLy4vc3JjL2Zvb2QtYXBwL3Njb3JlLnRzIiwid2VicGFjazovL3R5cGVzY3JpcHRhcHAvLi9zcmMvZm9vZC1hcHAvZm9vZC50cyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0YXBwLy4vc3JjL2Zvb2QtYXBwL2Zvb2RzLnRzIiwid2VicGFjazovL3R5cGVzY3JpcHRhcHAvLi9zcmMvZm9vZC1hcHAvbWFpbi50cyJdLCJuYW1lcyI6WyJTY29yZSIsIkZvb2RzIiwiZ2V0SW5zdGFuY2UiLCJhY3RpdmVFbGVtZW50c1Njb3JlIiwicmVkdWNlIiwidG90YWwiLCJzY29yZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInRleHRDb250ZW50IiwiU3RyaW5nIiwidGhpcyIsInRvdGFsU2NvcmUiLCJpbnN0YW5jZSIsIkZvb2QiLCJlbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsaWNrRXZlbnRIYW5kbGVyIiwiYmluZCIsImNvbnNvbGUiLCJsb2ciLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJyZW5kZXIiLCJlbGVtZW50cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfYWN0aXZlRWxlbWVudHMiLCJfYWN0aXZlRWxlbWVudHNTY29yZSIsImZvckVhY2giLCJjb250YWlucyIsInB1c2giLCJhY3RpdmVFbGVtZW50cyIsImZvb2RTY29yZSIsIk51bWJlciJdLCJtYXBwaW5ncyI6Im1CQUNPLE1BQU1BLEVBQ1QsZUFDQSxpQkFFSSxPQURjQyxFQUFNQyxjQUNQQyxvQkFBb0JDLFFBQU8sQ0FBQ0MsRUFBT0MsSUFBVUQsRUFBUUMsR0FBTyxHQUU3RSxTQUNJQyxTQUFTQyxjQUFjLGtCQUFrQkMsWUFBY0MsT0FBT0MsS0FBS0MsWUFHdkUscUJBSUksT0FIS1osRUFBTWEsV0FDUGIsRUFBTWEsU0FBVyxJQUFJYixHQUVsQkEsRUFBTWEsVUNkZCxNQUFNQyxFQUNULFlBQVlDLEdBQ1JKLEtBQUtJLFFBQVVBLEVBQ2ZBLEVBQVFDLGlCQUFpQixRQUFTTCxLQUFLTSxrQkFBa0JDLEtBQUtQLE9BR2xFLG9CQUVJUSxRQUFRQyxJQUFJLHNDQUNaVCxLQUFLSSxRQUFRTSxVQUFVQyxPQUFPLGdCQUNoQnRCLEVBQU1FLGNBQ2RxQixVQ1hQLE1BQU10QixFQUNULGNBQ0lVLEtBQUthLFNBQVdqQixTQUFTa0IsaUJBQWlCLFNBQzFDZCxLQUFLZSxnQkFBa0IsR0FDdkJmLEtBQUtnQixxQkFBdUIsR0FDNUJoQixLQUFLYSxTQUFTSSxTQUFRYixJQUNsQixJQUFJRCxFQUFLQyxNQUlqQixxQkFTSSxPQVJBSSxRQUFRQyxJQUFJLHFCQUNaVCxLQUFLZSxnQkFBa0IsR0FDdkJmLEtBQUthLFNBQVNJLFNBQVFiLElBRWRBLEVBQVFNLFVBQVVRLFNBQVMsaUJBQzNCbEIsS0FBS2UsZ0JBQWdCSSxLQUFLZixNQUczQkosS0FBS2UsZ0JBR2hCLDBCQVNJLE9BUkFQLFFBQVFDLElBQUkscUJBQ1pULEtBQUtnQixxQkFBdUIsR0FDNUJoQixLQUFLb0IsZUFBZUgsU0FBUWIsSUFDeEIsTUFBTWlCLEVBQVlqQixFQUFRUCxjQUFjLGdCQUNwQ3dCLEdBQ0FyQixLQUFLZ0IscUJBQXFCRyxLQUFLRyxPQUFPRCxFQUFVdkIsaUJBR2pERSxLQUFLZ0IscUJBRWhCLHFCQU1JLE9BTEsxQixFQUFNWSxXQUNQWixFQUFNWSxTQUFXLElBQUlaLEVBQ3JCa0IsUUFBUUMsSUFBSSxzQkFFaEJELFFBQVFDLElBQUkscUJBQ0xuQixFQUFNWSxVQUdyQk0sUUFBUUMsSUFBSSx1QkN0Q1pELFFBQVFDLElBQUksU0FDWm5CLEVBQU1DLGUiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9vZHMgfSBmcm9tICcuL2Zvb2RzJztcbmV4cG9ydCBjbGFzcyBTY29yZSB7XG4gICAgY29uc3RydWN0b3IoKSB7IH1cbiAgICBnZXQgdG90YWxTY29yZSgpIHtcbiAgICAgICAgY29uc3QgZm9vZHMgPSBGb29kcy5nZXRJbnN0YW5jZSgpO1xuICAgICAgICByZXR1cm4gZm9vZHMuYWN0aXZlRWxlbWVudHNTY29yZS5yZWR1Y2UoKHRvdGFsLCBzY29yZSkgPT4gdG90YWwgKyBzY29yZSwgMCk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNjb3JlX19udW1iZXInKS50ZXh0Q29udGVudCA9IFN0cmluZyh0aGlzLnRvdGFsU2NvcmUpO1xuICAgIH1cbiAgICAvLyAqIFNjb3JlIOOCkiDoqIjnrpfjgZnjgotcbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgICAgIGlmICghU2NvcmUuaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIFNjb3JlLmluc3RhbmNlID0gbmV3IFNjb3JlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFNjb3JlLmluc3RhbmNlO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IFNjb3JlIH0gZnJvbSAnLi9zY29yZSc7XG5leHBvcnQgY2xhc3MgRm9vZCB7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudCkge1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jbGlja0V2ZW50SGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgLy8gKiBjbGlja+OBleOCjOOBn+OCiSDnmbrngavjgZnjgosgXG4gICAgY2xpY2tFdmVudEhhbmRsZXIoKSB7XG4gICAgICAgIC8vPyB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgn44Kv44Op44K5Jykg44Kv44Op44K544GM5ZCr44G+44KM44Gm44GE44KM44Gw5YmK6Zmk44CB5ZCr44G+44KM44Gm44GE44Gq44GR44KM44Gw6L+95Yqg44GZ44KLXG4gICAgICAgIGNvbnNvbGUubG9nKCctLS0tLS0tLUNsaWNrIOOCkuaknOefpeOBl+OBvuOBl+OBnyAoMSkgLS0tLS0tLS0nKTtcbiAgICAgICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoJ2Zvb2QtLWFjdGl2ZScpO1xuICAgICAgICBjb25zdCBzY29yZSA9IFNjb3JlLmdldEluc3RhbmNlKCk7XG4gICAgICAgIHNjb3JlLnJlbmRlcigpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IEZvb2QgfSBmcm9tICcuL2Zvb2QnO1xuZXhwb3J0IGNsYXNzIEZvb2RzIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5mb29kJyk7IC8vPyBlbGVtZW50IC5mb29kIOOCkuWFqOOBpuWPluW+l+OBmeOCi1xuICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50cyA9IFtdO1xuICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50c1Njb3JlID0gW107XG4gICAgICAgIHRoaXMuZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIG5ldyBGb29kKGVsZW1lbnQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gKiBFbGVtZW50IOimgee0oOOCkuWPluW+l+OBmeOCi1xuICAgIGdldCBhY3RpdmVFbGVtZW50cygpIHtcbiAgICAgICAgY29uc29sZS5sb2coJy0tLS0tLS0tMy0tLS0tLS0tJyk7XG4gICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzID0gW107XG4gICAgICAgIHRoaXMuZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIC8vPyAgZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ+OCr+ODqeOCueWQjScpIOWvvuixoeOBruimgee0oOOBq+OCr+ODqeOCueWQjeOBjOWQq+OBvuOCjOOBpuOBhOOCjOOBsOOAjHRydWXjgI3jgIHlkKvjgb7jgozjgabjgYTjgarjgZHjgozjgbDjgIxmYWxzZeOAjeOBjOi/lOOCiuOBvuOBmeOAglxuICAgICAgICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdmb29kLS1hY3RpdmUnKSkgeyAvLz8gRWxlbWVudC5jbGFzc0xpc3Qg44Kv44Op44K544Oq44K544OI44Gu5pON5L2cICAgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvamEvZG9jcy9XZWIvQVBJL0VsZW1lbnQvY2xhc3NMaXN0XG4gICAgICAgICAgICAgICAgdGhpcy5fYWN0aXZlRWxlbWVudHMucHVzaChlbGVtZW50KTsgLy8/IGNsaWNrIOOBl+OBnyBjbGFzcyDjgpIgW10g44Gr5qC857SN44GZ44KLXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5fYWN0aXZlRWxlbWVudHM7XG4gICAgfVxuICAgIC8vICog6YWN5YiX44GrIFNjb3Jl44Gu5pWw44KS5qC857SN44GZ44KLIOioiOeul+WJjVxuICAgIGdldCBhY3RpdmVFbGVtZW50c1Njb3JlKCkge1xuICAgICAgICBjb25zb2xlLmxvZygnLS0tLS0tLS0yLS0tLS0tLS0nKTtcbiAgICAgICAgdGhpcy5fYWN0aXZlRWxlbWVudHNTY29yZSA9IFtdO1xuICAgICAgICB0aGlzLmFjdGl2ZUVsZW1lbnRzLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICBjb25zdCBmb29kU2NvcmUgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb29kX19zY29yZScpO1xuICAgICAgICAgICAgaWYgKGZvb2RTY29yZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzU2NvcmUucHVzaChOdW1iZXIoZm9vZFNjb3JlLnRleHRDb250ZW50KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5fYWN0aXZlRWxlbWVudHNTY29yZTtcbiAgICB9XG4gICAgc3RhdGljIGdldEluc3RhbmNlKCkge1xuICAgICAgICBpZiAoIUZvb2RzLmluc3RhbmNlKSB7XG4gICAgICAgICAgICBGb29kcy5pbnN0YW5jZSA9IG5ldyBGb29kcygpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJy0tLS0tLS0tMC0tLS0tLS0tJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coJy0tLS0tLS0tMC0tLS0tLS0tJyk7XG4gICAgICAgIHJldHVybiBGb29kcy5pbnN0YW5jZTtcbiAgICB9XG59XG5jb25zb2xlLmxvZygnZm9vZHPjgafjgZnjgoggMeWbnuOBl+OBi+WRvOOBsOOCjOOBvuOBm+OCkycpO1xuIiwiLy8gKiBpbXBvcnQgNOOBpOOBruabuOOBjeaWuVxuaW1wb3J0IHsgRm9vZHMgfSBmcm9tICcuL2Zvb2RzJztcbi8vIGltcG9ydCB7IEZvb2RzIGFzIEZvb2RzTGlzdCB9IGZyb20gJy4vZm9vZHMuanMnOyAvLz8gYXPjgpLkvb/nlKjjgZfjgablkb3lkI3jgpLlpInjgYjjgotcbi8vIGltcG9ydCAqIGFzIEZvb2RzIGZyb20gJy4vZm9vZHMuanMnOyAvLz8g5YWo6YOoIOWPluW+l+OBmeOCi1xuLy8gaW1wb3J0IGZhZmFmYSBmcm9tICcuL2Zvb2RzLmpzJzsgLy8/IGV4cG9ydCBkZWZhdWx0IOOBqOWQjOaZguOBq+S9v+OBhiDlkb3lkI3jga/jgarjgpPjgafjgoLjgojjgY/jgarjgotcbmNvbnNvbGUubG9nKCdIZWxsbycpO1xuRm9vZHMuZ2V0SW5zdGFuY2UoKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=